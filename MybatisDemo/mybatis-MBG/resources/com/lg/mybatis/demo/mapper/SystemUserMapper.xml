<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lg.mybatis.demo.mapper.SystemUserMapper">
  <resultMap id="BaseResultMap" type="com.lg.mybatis.demo.domain.SystemUser">
    <id column="id" property="id" />
    <result column="username" property="username" />
    <result column="password" property="password" />
    <result column="userType" property="userType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, password, userType
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `systemuser`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `systemuser`
    where id = #{id}
  </select>
  <delete id="deleteByPrimaryKey">
    delete from `systemuser`
    where id = #{id}
  </delete>
  <delete id="deleteByExample">
    delete from `systemuser`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into `systemuser` (username, password, userType)
    values (#{username}, #{password}, #{userType})
  </insert>
  <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true">
    insert into `systemuser`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="userType != null">
        userType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username},
      </if>
      <if test="password != null">
        #{password},
      </if>
      <if test="userType != null">
        #{userType},
      </if>
    </trim>
  </insert>
  <select id="countByExample" resultType="java.lang.Long">
    select count(*) from `systemuser`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective">
    update `systemuser`
    <set>
      <if test="record.id != null">
        id = #{record.id},
      </if>
      <if test="record.username != null">
        username = #{record.username},
      </if>
      <if test="record.password != null">
        password = #{record.password},
      </if>
      <if test="record.userType != null">
        userType = #{record.userType},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample">
    update `systemuser`
    set id = #{record.id},
      username = #{record.username},
      password = #{record.password},
      userType = #{record.userType}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective">
    update `systemuser`
    <set>
      <if test="username != null">
        username = #{username},
      </if>
      <if test="password != null">
        password = #{password},
      </if>
      <if test="userType != null">
        userType = #{userType},
      </if>
    </set>
    where id = #{id}
  </update>
  <update id="updateByPrimaryKey">
    update `systemuser`
    set username = #{username},
      password = #{password},
      userType = #{userType}
    where id = #{id}
  </update>
</mapper>